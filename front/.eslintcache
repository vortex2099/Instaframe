[{"E:\\Instaframe\\front\\src\\index.js":"1","E:\\Instaframe\\front\\src\\App.js":"2","E:\\Instaframe\\front\\src\\reportWebVitals.js":"3","E:\\Instaframe\\front\\src\\components\\Navbar.js":"4","E:\\Instaframe\\front\\src\\components\\screens\\SignIn.js":"5","E:\\Instaframe\\front\\src\\components\\screens\\SignUp.js":"6","E:\\Instaframe\\front\\src\\components\\screens\\Home.js":"7","E:\\Instaframe\\front\\src\\components\\screens\\Profile.js":"8","E:\\Instaframe\\front\\src\\components\\screens\\CreatePost.js":"9","E:\\Instaframe\\front\\src\\reducers\\userReducer.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1599,"mtime":1609007335185,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1760,"mtime":1609012982496,"results":"15","hashOfConfig":"12"},{"size":2743,"mtime":1609008707788,"results":"16","hashOfConfig":"12"},{"size":4007,"mtime":1608967081531,"results":"17","hashOfConfig":"12"},{"size":1369,"mtime":1609011907912,"results":"18","hashOfConfig":"12"},{"size":2602,"mtime":1609013878932,"results":"19","hashOfConfig":"12"},{"size":3249,"mtime":1608972967667,"results":"20","hashOfConfig":"12"},{"size":238,"mtime":1609007951054,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ev9g3p",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Instaframe\\front\\src\\index.js",[],["46","47"],"E:\\Instaframe\\front\\src\\App.js",["48","49"],"E:\\Instaframe\\front\\src\\reportWebVitals.js",[],"E:\\Instaframe\\front\\src\\components\\Navbar.js",["50","51","52","53"],"E:\\Instaframe\\front\\src\\components\\screens\\SignIn.js",["54","55","56"],"import React, { useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../../App'\r\nimport M from 'materialize-css'\r\n\r\n\r\n\r\nconst SignIn = () => {\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [password, setPasword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const PostData = () => {\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"invalid email\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n        fetch(\"/signin\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                //\" Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                }\r\n                else {\r\n\r\n                    localStorage.setItem(\"jwt\", data.token)\r\n                    localStorage.setItem(\"user\", JSON.stringify(data.user))\r\n                    dispatch({ type: \"USER\", payload: data.user })\r\n                    M.toast({ html: \"signedin success\", classes: \"#43a047 green darken-1\" })\r\n                    history.push('/')\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Instaframe</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPasword(e.target.value)}\r\n                />\r\n                <button className=\"btn waves-effect waves-light #f44336 red darken-1\"\r\n                    onClick={() => PostData()}\r\n                >\r\n                    Login\r\n            </button>\r\n                <h5>\r\n                    <Link to=\"/signup\">Don't have an account ?</Link>\r\n                </h5>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SignIn","E:\\Instaframe\\front\\src\\components\\screens\\SignUp.js",["57","58","59"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\n\r\n\r\nconst SignUp = () => {\r\n\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [password, setPasword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(undefined)\r\n    useEffect(() => {\r\n        if (url) {\r\n            uploadFields()\r\n        }\r\n    }, [url])\r\n    const uploadPic = () => {\r\n        const data = new FormData()\r\n        data.append(\"file\", image)\r\n        data.append(\"upload_preset\", \"instaframe\")\r\n        data.append(\"cloud_name\", \"vortex2099\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/vortex2099/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setUrl(data.url)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const uploadFields = () => {\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"invalid email\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n        fetch(\"/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic: url\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#43a047 green darken-1\" })\r\n                    history.push('/signin')\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const PostData = () => {\r\n        if (image) {\r\n            uploadPic()\r\n        } else {\r\n            uploadFields()\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Instaframe</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPasword(e.target.value)}\r\n\r\n                />\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn #f44336 red darken-1\">\r\n                        <span>Upload pic</span>\r\n                        <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light #f44336 red darken-1\"\r\n                    onClick={() => PostData()}\r\n                >\r\n                    SignUP\r\n            </button>\r\n                <h5>\r\n                    <Link to=\"/signin\">Already have an account ?</Link>\r\n                </h5>\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SignUp","E:\\Instaframe\\front\\src\\components\\screens\\Home.js",["60","61","62","63"],"E:\\Instaframe\\front\\src\\components\\screens\\Profile.js",["64","65","66","67"],"E:\\Instaframe\\front\\src\\components\\screens\\CreatePost.js",["68"],"import React, { useState, useEffect } from 'react'\r\nimport M from 'materialize-css'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst CreatePost = () => {\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n    useEffect(() => {\r\n        if (url) {\r\n            fetch(\"/createpost\", {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic: url\r\n                })\r\n            }).then(res => res.json())\r\n                .then(data => {\r\n\r\n                    if (data.error) {\r\n                        M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                    }\r\n                    else {\r\n                        M.toast({ html: \"Created post Successfully\", classes: \"#43a047 green darken-1\" })\r\n                        history.push('/')\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }, [url])\r\n\r\n    const postDetails = () => {\r\n        const data = new FormData()\r\n        data.append(\"file\", image)\r\n        data.append(\"upload_preset\", \"instaframe\")\r\n        data.append(\"cloud_name\", \"vortex2099\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/vortex2099/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setUrl(data.url)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"card input-filed\"\r\n            style={{\r\n                margin: \"30px auto\",\r\n                maxWidth: \"500px\",\r\n                padding: \"20px\",\r\n                textAlign: \"center\"\r\n            }}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"body\"\r\n                value={body}\r\n                onChange={(e) => setBody(e.target.value)}\r\n\r\n            />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #f44336 red darken-1\">\r\n                    <span>Uplaod Image</span>\r\n                    <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #f44336 red darken-1\"\r\n                onClick={() => postDetails()}\r\n\r\n            >\r\n                Submit post\r\n            </button>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CreatePost","E:\\Instaframe\\front\\src\\reducers\\userReducer.js",["69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":16,"column":11,"nodeType":"77","messageId":"78","endLine":16,"endColumn":16},{"ruleId":"79","severity":1,"message":"80","line":26,"column":6,"nodeType":"81","endLine":26,"endColumn":8,"suggestions":"82"},{"ruleId":"75","severity":1,"message":"83","line":7,"column":12,"nodeType":"77","messageId":"78","endLine":7,"endColumn":18},{"ruleId":"75","severity":1,"message":"84","line":7,"column":20,"nodeType":"77","messageId":"78","endLine":7,"endColumn":29},{"ruleId":"75","severity":1,"message":"85","line":8,"column":12,"nodeType":"77","messageId":"78","endLine":8,"endColumn":23},{"ruleId":"75","severity":1,"message":"86","line":8,"column":25,"nodeType":"77","messageId":"78","endLine":8,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":9,"column":13,"nodeType":"77","messageId":"78","endLine":9,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":14,"column":24,"nodeType":"89","messageId":"90","endLine":14,"endColumn":25,"suggestions":"91"},{"ruleId":"87","severity":1,"message":"88","line":14,"column":49,"nodeType":"89","messageId":"90","endLine":14,"endColumn":50,"suggestions":"92"},{"ruleId":"79","severity":1,"message":"93","line":19,"column":8,"nodeType":"81","endLine":19,"endColumn":13,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"88","line":38,"column":24,"nodeType":"89","messageId":"90","endLine":38,"endColumn":25,"suggestions":"95"},{"ruleId":"87","severity":1,"message":"88","line":38,"column":49,"nodeType":"89","messageId":"90","endLine":38,"endColumn":50,"suggestions":"96"},{"ruleId":"75","severity":1,"message":"97","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":7,"column":13,"nodeType":"77","messageId":"78","endLine":7,"endColumn":18},{"ruleId":"75","severity":1,"message":"98","line":7,"column":20,"nodeType":"77","messageId":"78","endLine":7,"endColumn":28},{"ruleId":"99","severity":1,"message":"100","line":34,"column":33,"nodeType":"101","endLine":34,"endColumn":57},{"ruleId":"75","severity":1,"message":"98","line":6,"column":20,"nodeType":"77","messageId":"78","endLine":6,"endColumn":28},{"ruleId":"75","severity":1,"message":"102","line":7,"column":12,"nodeType":"77","messageId":"78","endLine":7,"endColumn":17},{"ruleId":"75","severity":1,"message":"103","line":7,"column":19,"nodeType":"77","messageId":"78","endLine":7,"endColumn":27},{"ruleId":"99","severity":1,"message":"100","line":34,"column":25,"nodeType":"101","endLine":36,"endColumn":27},{"ruleId":"79","severity":1,"message":"104","line":39,"column":8,"nodeType":"81","endLine":39,"endColumn":13,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":4,"column":21,"nodeType":"108","messageId":"109","endLine":4,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":7,"column":21,"nodeType":"108","messageId":"109","endLine":7,"endColumn":23},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["112"],"'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'userDetails' is assigned a value but never used.","'setUserDetails' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["113","114"],["115","116"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["117"],["118","119"],["120","121"],"'Link' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["122"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"messageId":"125","fix":"126","desc":"127"},{"messageId":"128","fix":"129","desc":"130"},{"messageId":"125","fix":"131","desc":"127"},{"messageId":"128","fix":"132","desc":"130"},{"desc":"133","fix":"134"},{"messageId":"125","fix":"135","desc":"127"},{"messageId":"128","fix":"136","desc":"130"},{"messageId":"125","fix":"137","desc":"127"},{"messageId":"128","fix":"138","desc":"130"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [dispatch, history]",{"range":"141","text":"142"},"removeEscape",{"range":"143","text":"144"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"145","text":"146"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"147","text":"144"},{"range":"148","text":"146"},"Update the dependencies array to be: [uploadFields, url]",{"range":"149","text":"150"},{"range":"151","text":"144"},{"range":"152","text":"146"},{"range":"153","text":"144"},{"range":"154","text":"146"},"Update the dependencies array to be: [body, history, title, url]",{"range":"155","text":"156"},[935,937],"[dispatch, history]",[447,448],"",[447,447],"\\",[472,473],[472,472],[519,524],"[uploadFields, url]",[1133,1134],[1133,1133],[1158,1159],[1158,1158],[1345,1350],"[body, history, title, url]"]